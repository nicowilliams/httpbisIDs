<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "file:///home/nico/I-Ds/httpbis/../test/src/../data/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="GENERATOR" content="LyX 2.0.0" />
<meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
<title>Channel Binding Signalling for the Generic Security Services Application Programming Interface</title>

<!-- Text Class Preamble -->
<style type="text/css">
div.toc {
margin: 2em 0em;
border-style: solid;
border-width: 2px 0px;
padding: 1em 0em;
}
div.tochead { font-size: x-large; font-weight: bold; }
div.lyxtoc-0 {
margin: 2em 0em 0em 0em;
font-size: xx-large;
font-weight: bold;
}
div.lyxtoc-1 {
margin: 1em 0em 0em 0em;
font-size: x-large;
font-weight: bold;
}
div.lyxtoc-2 {
margin: 0em 0em 0em 1em;
font-size: large;
font-weight: normal;
}
div.lyxtoc-3 { margin: 0em 0em 0em 0.5em; font-size: medium; }
div.lyxtoc-4 { margin: 0em 0em 0em 0.5em; }
div.lyxtoc-5 { margin: 0em 0em 0em 0.5em; }
div.lyxtoc-6 { margin: 0em 0em 0em 0.5em; }
a.tocentry {
text-decoration: none;
color: black;
}
a.tocentry:visited { color: black; }
a.tocarrow {
font-weight: bold;
text-decoration: none;
color: #909090;
}
a.tocarrow:visited { color: #C0C0C0; }
</style>

<!-- Preamble Snippets -->

<!-- Layout-provided Styles -->
<style type='text/css'>
h1.title {
font-size: x-large;
margin-bottom: 1ex;
text-align: center;

}
div.standard {
text-align: left;

}
div.plain_layout {
text-align: left;

}
div.author {
font-size: large;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: center;

}
div.abstract {
font-size: small;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
margin-right: 3ex;
text-align: left;

}
div.abstract_label {
font-weight: bold;
font-size: large;
text-align: center;

}

div.abstract {
margin: 4ex;
}
div.abstract_item {
font-size: small;
padding-top: 1ex;
}
div.abstract_label {
font-weight: bold;
}
h2.section {
font-weight: bold;
font-size: x-large;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: left;

}
h3.subsection {
font-weight: bold;
font-size: large;
margin-top: 0.9ex;
margin-bottom: 0.5ex;
text-align: left;

}
dl.description dt { font-weight: bold; }
ul.itemize {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
h4.subsubsection {
font-weight: bold;
font-size: medium;
margin-top: 0.7ex;
margin-bottom: 0.4ex;
text-align: left;

}
div.flex_docname {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_ipr {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_intendedstatus {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_titleabbrev {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_ietfarea {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_xml_rfckeyword {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_updates {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_pi_toc {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_pi_symrefs {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_pi_tocindent {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_pi {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_authororg {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_authororgabbrev {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_authoremailaddr {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_entityxref {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.float {
border: 2px solid black;
text-align: center;
}
div.listings {
font-family: monospace;
}
div.float-caption {
text-align: center;
border: 2px solid black;
padding: 1ex;
margin: 1ex;
}
div.flex_bibxml {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
</style>
</head>
<body>
<h1 class="title"><a id='magicparlabel-1' />
Channel Binding Signalling for the Generic Security Services Application Programming Interface</h1>
<div class="standard"><a id='magicparlabel-2' />
<div class="flex_docname"><div class="plain_layout"><a id='magicparlabel-6' />
draft-williams-kitten-channel-bound-flag-00</div>
</div><div class="flex_ipr"><div class="plain_layout"><a id='magicparlabel-10' />
trust200902</div>
</div><div class="flex_intendedstatus"><div class="plain_layout"><a id='magicparlabel-14' />
std</div>
</div><div class="flex_titleabbrev"><div class="plain_layout"><a id='magicparlabel-18' />
GSS Channel Bound Flag</div>
</div><div class="flex_ietfarea"><div class="plain_layout"><a id='magicparlabel-22' />
Security Area</div>
</div><div class="flex_xml_rfckeyword"><div class="plain_layout"><a id='magicparlabel-26' />
Internet-Draft</div>
</div><div class="flex_updates"><div class="plain_layout"><a id='magicparlabel-30' />
RFC2743 RFC2744</div>
</div></div>

<div class="standard"><a id='magicparlabel-31' />
<div class="flex_pi_toc"><div class="plain_layout"><a id='magicparlabel-35' />
yes</div>
</div><div class="flex_pi_symrefs"><div class="plain_layout"><a id='magicparlabel-39' />
yes</div>
</div><div class="flex_pi_tocindent"><div class="plain_layout"><a id='magicparlabel-43' />
no</div>
</div><div class="flex_pi"><div class="plain_layout"><a id='magicparlabel-47' />
comments="yes"</div>
</div><div class="flex_pi"><div class="plain_layout"><a id='magicparlabel-51' />
inline="yes"</div>
</div></div>

<div class="author"><div class="author_item"><a id='magicparlabel-52' />
Nicolas Williams<div class="flex_authororg"><div class="plain_layout"><a id='magicparlabel-56' />
Cryptonector, LLC</div>
</div><div class="flex_authororgabbrev"><div class="plain_layout"><a id='magicparlabel-60' />
Cryptonector</div>
</div><div class="flex_authoremailaddr"><div class="plain_layout"><a id='magicparlabel-64' />
nico@cryptonector.com</div>
</div></div>
</div>

<div class="abstract"><div class="abstract_label">Abstract</div>
<div class="abstract_item"><a id='magicparlabel-65' />
This Internet-Draft proposes the addition of a &ldquo;channel bound&rdquo; return flag for the GSS_Init_sec_context() and GSS_Accept_sec_context() functions. Two behaviors are specified: a default, safe behavior, and a behavior that is only safe when the application specifically tells the Generic Security Services Application Programming Interface (GSS-API) that it (the applicaiton) supports the new behavior.</div>
</div>
<div class="standard"><a id='magicparlabel-66' />
</div>
<div class='toc'><div class='tochead part_'>Table of Contents</div>

<div class='lyxtoc-1'><a href='#magicparlabel-67' class='tocentry'>1 Introduction</a> <a href='#magicparlabel-67' class='tocarrow'>&gt;</a>

<div class='lyxtoc-2'><a href='#magicparlabel-88' class='tocentry'>1.1 Conventions used in this document</a> <a href='#magicparlabel-88' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-1'><a href='#magicparlabel-94' class='tocentry'>2 Channel Binding State Extension</a> <a href='#magicparlabel-94' class='tocarrow'>&gt;</a>

<div class='lyxtoc-2'><a href='#magicparlabel-105' class='tocentry'>2.1 GSS_Set_cred_option()</a> <a href='#magicparlabel-105' class='tocarrow'>&gt;</a>

<div class='lyxtoc-3'><a href='#magicparlabel-118' class='tocentry'>2.1.1 C-Bindings</a> <a href='#magicparlabel-118' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-2'><a href='#magicparlabel-138' class='tocentry'>2.2 GSS_Set_cred_option_critical()</a> <a href='#magicparlabel-138' class='tocarrow'>&gt;</a>

<div class='lyxtoc-3'><a href='#magicparlabel-152' class='tocentry'>2.2.1 C-Bindings</a> <a href='#magicparlabel-152' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-2'><a href='#magicparlabel-172' class='tocentry'>2.3 channel_bound_flag</a> <a href='#magicparlabel-172' class='tocarrow'>&gt;</a>

<div class='lyxtoc-3'><a href='#magicparlabel-175' class='tocentry'>2.3.1 C-Bindings</a> <a href='#magicparlabel-175' class='tocarrow'>&gt;</a></div>
</div>
</div>

<div class='lyxtoc-1'><a href='#magicparlabel-192' class='tocentry'>3 Normative References</a> <a href='#magicparlabel-192' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-218' class='tocentry'>4 Informative References</a> <a href='#magicparlabel-218' class='tocarrow'>&gt;</a></div>
</div>

<h2 class="section"><span class="section_label">1</span> <a id='magicparlabel-67' />
Introduction</h2>
<div class="standard"><a id='magicparlabel-68' />
The GSS-API <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-72' />
RFC2743</div>
</div> supports &ldquo;channel binding&rdquo; <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-76' />
RFC5056</div>
</div>, a technique for detection of man-in-the-middle (MITM) attacks in secure channels at lower network layers. This facility is meant to be all-or-nothing: either both the initiator and acceptor use it and it succeeds, or both must not use it. This has created a negotiation problem when retrofitting the use of channel binding into existing application protocols.</div>

<div class="standard"><a id='magicparlabel-77' />
Many implementations of the Kerberos V5 GSS-API mechanism <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-81' />
RFC4121</div>
</div> cause the acceptor to succeed when the initiator used channel binding but the acceptor application did not. This has helped deployment of channel binding in existing applications: first fix all the initiators, then fix all the acceptors. But even this is insufficient when there are many clients to fix, such that fixing them all will take a long time.</div>

<div class="standard"><a id='magicparlabel-82' />
This document proposes a new method for deployment of channel binding that allows the feature to be enabled on the acceptor side before fixing all initiators. If the GSS-API had always had a return flag by which to indicate channel binding state then we could have had a simpler method of deploying channel binding: applications check that return flag and act accordingly (e.g., fail when channel binding is required). We cannot safely introduce this behavior now without an indication of support by the application.</div>

<div class="standard"><a id='magicparlabel-83' />
Note that the GSS-APIv2u1 <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-87' />
RFC2743</div>
</div> seems to indicate that mechanisms must ignore channel bindings when one party provided none. In practice some mechanisms ignore channel bindings when the acceptor provides none, but not when the initiator provides none. In practice it would be useless to allow security context establishment when the initiator does not provide channel bindings but the acceptor does, at least as long as there's no outward indication of whether channel binding was used! But the GSS-APIv2u1 does not provide any such indication. We correct this below.</div>
<h3 class="subsection"><span class="subsection_label">1.1</span> <a id='magicparlabel-88' />
Conventions used in this document</h3>
<div class="standard"><a id='magicparlabel-89' />
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-93' />
RFC2119</div>
</div>.</div>
<h2 class="section"><span class="section_label">2</span> <a id='magicparlabel-94' />
Channel Binding State Extension</h2>
<div class="standard"><a id='magicparlabel-95' />
We propose a new return flag for GSS_Init_sec_context() and GSS_Accept_sec_context(), as well as a pair of functions for setting options on credential handles, along with an option for signalling understanding of the new flag in the acceptor applications.</div>

<div class="standard"><a id='magicparlabel-96' />
C bindings of these extensions are provided along the lines of <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-100' />
RFC2744</div>
</div> and <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-104' />
RFC5587</div>
</div>.</div>
<h3 class="subsection"><span class="subsection_label">2.1</span> <a id='magicparlabel-105' />
GSS_Set_cred_option()</h3>
<div class="standard"><a id='magicparlabel-106' />
Inputs:</div>

<dl class='description'><dt class="description_label">cred_handle&nbsp;CREDENTIAL&nbsp;HANDLE</dt>
<dd class="description_item"><a id='magicparlabel-107' />
 If no credential handle is given then the option MAY be applied globally to the default credential handle, but the implementation MAY return an error instead.</dd>
<dt class="description_label">desired_object&nbsp;OBJECT&nbsp;IDENTIFIER</dt>
<dd class="description_item"><a id='magicparlabel-108' />
 Desired option; MUST NOT be GSS_C_NO_OID.</dd>
<dt class="description_label">value&nbsp;OCTET&nbsp;STRING</dt>
<dd class="description_item"><a id='magicparlabel-109' />
 Value for the option.</dd>
</dl>
<div class="standard"><a id='magicparlabel-110' />
Outputs:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-111' />
major_status INTEGER</li>
<li class="itemize_item"><a id='magicparlabel-112' />
minor_status INTEGER</li>
</ul>
<div class="standard"><a id='magicparlabel-113' />
Return major status codes:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-114' />
GSS_S_COMPLETE indicates success.</li>
<li class="itemize_item"><a id='magicparlabel-115' />
GSS_S_UNAVAILABLE indicates that the the given option is not supported by any mechanism.</li>
<li class="itemize_item"><a id='magicparlabel-116' />
GSS_S_FAILURE indicates a general failure.</li>
</ul>
<div class="standard"><a id='magicparlabel-117' />
This function sets the given value to a credential option named by desired_object on the given cred_handle.</div>
<h4 class="subsubsection"><span class="subsubsection_label">2.1.1</span> <a id='magicparlabel-118' />
C-Bindings</h4>
<div class="standard"><a id='magicparlabel-119' />
</div>
<div class='float float-figure'><div class="plain_layout"><a id='magicparlabel-123' />
</div>
<div class='float float-listings'><pre>   OM_uint32
   gss_set_cred_option(OM_uint32 *minor_status,
                       gss_cred_id_t *cred_handle,
                       const gss_OID desired_object,
                       const gss_buffer_t value);</pre></div>


<div class="plain_layout"><a id='magicparlabel-132' />
<div class='float-caption float-caption-figure'>Figure 1:<div class="plain_layout"><a id='magicparlabel-136' />
</div>
</div></div>
</div>


<div class="standard"><a id='magicparlabel-137' />
NOTE: the cred_handle input argument to gss_set_cred_option() is a pointer to gss_cred_id_t for historical reasons. This is in conflict with the regular GSS-API pattern, but it cannot be changed at this stage. [We could rename this function and not document gss_set_cred_option(), but what would be the point?]</div>
<h3 class="subsection"><span class="subsection_label">2.2</span> <a id='magicparlabel-138' />
GSS_Set_cred_option_critical()</h3>
<div class="standard"><a id='magicparlabel-139' />
Inputs:</div>

<dl class='description'><dt class="description_label">input_cred_handle&nbsp;CREDENTIAL&nbsp;HANDLE</dt>
<dd class="description_item"><a id='magicparlabel-140' />
 If no credential handle is given then the option MAY be applied globally to the default credential handle, but the implementation MAY return an error instead.</dd>
<dt class="description_label">desired_object&nbsp;OBJECT&nbsp;IDENTIFIER</dt>
<dd class="description_item"><a id='magicparlabel-141' />
 Desired option; MUST NOT be GSS_C_NO_OID.</dd>
<dt class="description_label">value&nbsp;OCTET&nbsp;STRING</dt>
<dd class="description_item"><a id='magicparlabel-142' />
 Value for the option.</dd>
</dl>
<div class="standard"><a id='magicparlabel-143' />
Outputs:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-144' />
output_cred_handle CREDENTIAL_HANDLE</li>
<li class="itemize_item"><a id='magicparlabel-145' />
major_status INTEGER</li>
<li class="itemize_item"><a id='magicparlabel-146' />
minor_status INTEGER</li>
</ul>
<div class="standard"><a id='magicparlabel-147' />
Return major status codes:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-148' />
GSS_S_COMPLETE indicates success.</li>
<li class="itemize_item"><a id='magicparlabel-149' />
GSS_S_UNAVAILABLE indicates that the the given option is not supported by any mechanism.</li>
<li class="itemize_item"><a id='magicparlabel-150' />
GSS_S_FAILURE indicates a general failure.</li>
</ul>
<div class="standard"><a id='magicparlabel-151' />
This function sets the given value to a credential option named by desired_object on the given input_cred_handle or on a duplicate handle output in the output_cred_handle parameter if desired. If any mechanisms -for which the credential has elements- fails to set the option then that element will be removed from the credential.</div>
<h4 class="subsubsection"><span class="subsubsection_label">2.2.1</span> <a id='magicparlabel-152' />
C-Bindings</h4>
<div class="standard"><a id='magicparlabel-153' />
</div>
<div class='float float-figure'><div class="plain_layout"><a id='magicparlabel-157' />
</div>
<div class='float float-listings'><pre>   OM_uint32
   gss_set_cred_option_critical(OM_uint32 *minor_status,
                                gss_const_cred_id_t input_cred_handle,
                                gss_cred_id_t *output_cred_handle,
                                const gss_OID desired_object,
                                const gss_buffer_t value);</pre></div>


<div class="plain_layout"><a id='magicparlabel-167' />
<div class='float-caption float-caption-figure'>Figure 2:<div class="plain_layout"><a id='magicparlabel-171' />
</div>
</div></div>
</div>

<h3 class="subsection"><span class="subsection_label">2.3</span> <a id='magicparlabel-172' />
channel_bound_flag</h3>
<div class="standard"><a id='magicparlabel-173' />
Whenever both the initiator and the acceptor provide matching channel bindings to GSS_Init_sec_context() and GSS_Accept_sec_context(), respectively, then the mechanism SHALL indicate that the context is channel bound via an output flag for the established context.</div>

<div class="standard"><a id='magicparlabel-174' />
Whenever the caller shall have set the GSS_C_CHANNEL_BOUND_CRED_OPT_OID (see below) then the mechanism SHOULD allow security context establishment to succeed even if one of the initiator or acceptor failed to provide channel bindings, and then the mechanism MUST NOT output the channel_bound_flag.</div>
<h4 class="subsubsection"><span class="subsubsection_label">2.3.1</span> <a id='magicparlabel-175' />
C-Bindings</h4>
<div class="standard"><a id='magicparlabel-176' />
</div>
<div class='float float-figure'><div class="plain_layout"><a id='magicparlabel-180' />
</div>
<div class='float float-listings'><pre>   #define GSS_C_CHANNEL_BOUND 4096 /* 0x1000
   gss_const_OID GSS_C_CHANNEL_BOUND_CRED_OPT_OID; /* OID TBD */</pre></div>


<div class="plain_layout"><a id='magicparlabel-186' />
<div class='float-caption float-caption-figure'>Figure 3:<div class="plain_layout"><a id='magicparlabel-190' />
</div>
</div></div>

<div class="plain_layout"><a id='magicparlabel-191' />
</div>
</div>

<h2 class="section"><span class="section_label">3</span> <a id='magicparlabel-192' />
<a id="sec_References" />
Normative References</h2>
<div class="standard"><a id='magicparlabel-193' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-197' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">rfc2119</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-198' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-202' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2743.xml">rfc2743</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-203' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-207' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2744.xml">rfc2744</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-208' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-212' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5056.xml">rfc5056</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-213' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-217' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5587.xml">rfc5587</a></div>
</div></div>
<h2 class="section"><span class="section_label">4</span> <a id='magicparlabel-218' />
Informative References</h2>
<div class="standard"><a id='magicparlabel-219' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-223' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4121.xml">rfc4121</a></div>
</div></div>
</body>
</html>
