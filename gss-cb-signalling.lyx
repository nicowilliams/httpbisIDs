#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass docbook
\use_default_options true
\maintain_unincluded_children false
\begin_local_layout
Format 31

InsetLayout Flex:PI_Strict
    LyXType Custom
    HTMLTag div
    LabelString PI_Strict
End

InsetLayout Flex:PI
    LyXType Custom
    HTMLTag div
    LabelString PI
End

InsetLayout Flex:PI_SymRefs
    LyXType Custom
    HTMLTag div
    LabelString PI_SymRefs
End

InsetLayout Flex:PI_SortRefs
    LyXType Custom
    HTMLTag div
    LabelString PI_SortRefs
End

InsetLayout Flex:PI_TOC
    LyXType Custom
    HTMLTag div
    LabelString PI_TOC
End

InsetLayout Flex:PI_TOCIndent
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCIndent
End

InsetLayout Flex:PI_TOCDepth
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCDepth
End

InsetLayout Flex:PI_TOCNarrow
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCNarrow
End

InsetLayout Flex:PI_TOCCompact
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCCompact
End

InsetLayout Flex:PI_TOCAppendix
    LyXType Custom
    HTMLTag div
    LabelString PI_TOCAppendix
End

InsetLayout Flex:DocName
    LyXType Custom
    HTMLTag div
    LabelString DocName
End

InsetLayout Flex:IntendedStatus
    LyXType Custom
    HTMLTag div
    LabelString IntendedStatus
End

InsetLayout Flex:Updates
    LyXType Custom
    HTMLTag div
    LabelString Updates
End

InsetLayout Flex:Obsoletes
    LyXType Custom
    HTMLTag div
    LabelString Obsoletes
End

InsetLayout Flex:SeriesNo
    LyXType Custom
    HTMLTag div
    LabelString SeriesNo
End

InsetLayout Flex:RFCNumber
    LyXType Custom
    HTMLTag div
    LabelString RFCNumber
End

InsetLayout Flex:IPR
    LyXType Custom
    HTMLTag div
    LabelString IPR
End

InsetLayout Flex:IETFArea
    LyXType Custom
    HTMLTag div
    LabelString IETFArea
End

InsetLayout Flex:IETFWorkingGroup
    LyXType Custom
    HTMLTag div
    LabelString IETFWorkingGroup
End

InsetLayout Flex:XML2RFCKeyword
    LyXType Custom
    HTMLTag div
    LabelString XML2RFCKeyword
End

InsetLayout Flex:TitleAbbrev
    LyXType Custom
    HTMLTag div
    LabelString TitleAbbrev
End

InsetLayout Flex:AuthorRole
    LyXType Custom
    HTMLTag div
    LabelString AuthRole
End

InsetLayout Flex:AuthorInitials
    LyXType Custom
    HTMLTag div
    LabelString AuthInitials
End

InsetLayout Flex:AuthorSurname
    LyXType Custom
    HTMLTag div
    LabelString AuthSurname
End

InsetLayout Flex:AuthorOrg
    LyXType Custom
    HTMLTag div
    LabelString AuthOrg
End

InsetLayout Flex:AuthorOrgAbbrev
    LyXType Custom
    HTMLTag div
    LabelString AuthOrgAbbrev
End

InsetLayout Flex:AuthorEmailAddr
    LyXType Custom
    HTMLTag div
    LabelString AuthEmailAddr
End

InsetLayout Flex:AuthorAddrStreet
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrStreet
End

InsetLayout Flex:AuthorAddrCity
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrCity
End

InsetLayout Flex:AuthorAddrRegion
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrRegion
End

InsetLayout Flex:AuthorAddrCode
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrCode
End

InsetLayout Flex:AuthorAddrCountry
    LyXType Custom
    HTMLTag div
    LabelString AuthAddrCountry
End

InsetLayout Flex:EntityXRef
    LyXType Custom
    HTMLTag div
    LabelString EntityXRef
End

InsetLayout Flex:BibXML
    LyXType Custom
    HTMLTag div
    LabelString BibXML
End

InsetLayout Flex:EmbeddedBibXML
    LyXType Custom
    HTMLTag div
    LabelString EmbeddedBibXML
End
\end_local_layout
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman cmr
\font_sans cmss
\font_typewriter cmtt
\font_default_family ttdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Channel Binding Signalling for the Generic Security Services Application
 Programming Interface
\end_layout

\begin_layout Standard
\begin_inset Flex DocName
status open

\begin_layout Plain Layout
draft-williams-kitten-channel-bound-flag-00
\end_layout

\end_inset


\begin_inset Flex IPR
status open

\begin_layout Plain Layout
trust200902
\end_layout

\end_inset


\begin_inset Flex IntendedStatus
status open

\begin_layout Plain Layout
std
\end_layout

\end_inset


\begin_inset Flex TitleAbbrev
status open

\begin_layout Plain Layout
GSS Channel Bound Flag
\end_layout

\end_inset


\begin_inset Flex IETFArea
status open

\begin_layout Plain Layout
Security Area
\end_layout

\end_inset


\begin_inset Flex XML2RFCKeyword
status open

\begin_layout Plain Layout
Internet-Draft
\end_layout

\end_inset


\begin_inset Flex Updates
status open

\begin_layout Plain Layout
RFC2743 RFC2744
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex PI TOC
status open

\begin_layout Plain Layout
yes
\end_layout

\end_inset


\begin_inset Flex PI SymRefs
status open

\begin_layout Plain Layout
yes
\end_layout

\end_inset


\begin_inset Flex PI TOCIndent
status open

\begin_layout Plain Layout
no
\end_layout

\end_inset


\begin_inset Flex PI
status open

\begin_layout Plain Layout
comments="yes"
\end_layout

\end_inset


\begin_inset Flex PI
status open

\begin_layout Plain Layout
inline="yes"
\end_layout

\end_inset


\end_layout

\begin_layout Author
Nicolas Williams
\begin_inset Flex AuthorOrg
status open

\begin_layout Plain Layout
Cryptonector, LLC
\end_layout

\end_inset


\begin_inset Flex AuthorOrgAbbrev
status open

\begin_layout Plain Layout
Cryptonector
\end_layout

\end_inset


\begin_inset Flex AuthorEmailAddr
status open

\begin_layout Plain Layout
nico@cryptonector.com
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
This Internet-Draft proposes the addition of a 
\begin_inset Quotes eld
\end_inset

channel bound
\begin_inset Quotes erd
\end_inset

 return flag for the GSS_Init_sec_context() and GSS_Accept_sec_context()
 functions.
 Two behaviors are specified: a default, safe behavior, and a behavior that
 is only safe when the application specifically tells the Generic Security
 Services Application Programming Interface (GSS-API) that it (the applicaiton)
 supports the new behavior.
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
The GSS-API 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC2743
\end_layout

\end_inset

 supports 
\begin_inset Quotes eld
\end_inset

channel binding
\begin_inset Quotes erd
\end_inset

 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC5056
\end_layout

\end_inset

, a technique for detection of man-in-the-middle (MITM) attacks in secure
 channels at lower network layers.
 This facility is meant to be all-or-nothing: either both the initiator
 and acceptor use it and it succeeds, or both must not use it.
 This has created a negotiation problem when retrofitting the use of channel
 binding into existing application protocols.
\end_layout

\begin_layout Standard
Many implementations of the Kerberos V5 GSS-API mechanism 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC4121
\end_layout

\end_inset

 cause the acceptor to succeed when the initiator used channel binding but
 the acceptor application did not.
 This has helped deployment of channel binding in existing applications:
 first fix all the initiators, then fix all the acceptors.
 But even this is insufficient when there are many clients to fix, such
 that fixing them all will take a long time.
\end_layout

\begin_layout Standard
This document proposes a new method for deployment of channel binding that
 allows the feature to be enabled on the acceptor side before fixing all
 initiators.
 If the GSS-API had always had a return flag by which to indicate channel
 binding state then we could have had a simpler method of deploying channel
 binding: applications check that return flag and act accordingly (e.g., fail
 when channel binding is required).
 We cannot safely introduce this behavior now without an indication of support
 by the application.
\end_layout

\begin_layout Subsection
Error in RFC2743
\end_layout

\begin_layout Standard
The GSS-APIv2u1 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC2743
\end_layout

\end_inset

 seems to indicate that mechanisms must ignore channel bindings when one
 party provided none.
 In practice some mechanisms ignore channel bindings when the acceptor provides
 none, but not when the initiator provides none.
 Note that it would be useless to allow security context establishment to
 succeed when the initiator does not provide channel bindings but the acceptor
 does, at least as long as there's no outward indication of whether channel
 binding was used! And indeed, the GSS-APIv2u1 does not provide any such
 indication.
 We correct this flaw in this document.
\end_layout

\begin_layout Subsection
Conventions used in this document
\end_layout

\begin_layout Standard
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
 "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are
 to be interpreted as described in 
\begin_inset Flex EntityXRef
status open

\begin_layout Plain Layout
RFC2119
\end_layout

\end_inset

.
\end_layout

\begin_layout Section
Channel Binding State Extension
\end_layout

\begin_layout Standard
We propose a new return flag for GSS_Init_sec_context() and GSS_Accept_sec_conte
xt(), as well as a pair of functions for setting options on credential handles,
 along with an option for signalling understanding of the new flag in the
 acceptor applications.
\end_layout

\begin_layout Standard
C bindings of these extensions are provided along the lines of 
\begin_inset Flex EntityXRef
status collapsed

\begin_layout Plain Layout
RFC2744
\end_layout

\end_inset

 and 
\begin_inset Flex EntityXRef
status collapsed

\begin_layout Plain Layout
RFC5587
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
GSS_Set_cred_option()
\end_layout

\begin_layout Standard
Inputs:
\end_layout

\begin_layout Description
cred_handle
\begin_inset space ~
\end_inset

CREDENTIAL
\begin_inset space ~
\end_inset

HANDLE If no credential handle is given then the option MAY be applied globally
 to the default credential handle, but the implementation MAY return an
 error instead.
\end_layout

\begin_layout Description
desired_object
\begin_inset space ~
\end_inset

OBJECT
\begin_inset space ~
\end_inset

IDENTIFIER Desired option; MUST NOT be GSS_C_NO_OID.
\end_layout

\begin_layout Description
value
\begin_inset space ~
\end_inset

OCTET
\begin_inset space ~
\end_inset

STRING Value for the option.
\end_layout

\begin_layout Standard
Outputs:
\end_layout

\begin_layout Itemize
major_status INTEGER
\end_layout

\begin_layout Itemize
minor_status INTEGER
\end_layout

\begin_layout Standard
Return major status codes:
\end_layout

\begin_layout Itemize
GSS_S_COMPLETE indicates success.
\end_layout

\begin_layout Itemize
GSS_S_UNAVAILABLE indicates that the the given option is not supported by
 any mechanism.
\end_layout

\begin_layout Itemize
GSS_S_FAILURE indicates a general failure.
\end_layout

\begin_layout Standard
This function sets the given value to a credential option named by desired_objec
t on the given cred_handle.
\end_layout

\begin_layout Subsubsection
C-Bindings
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

   OM_uint32
\end_layout

\begin_layout Plain Layout

   gss_set_cred_option(OM_uint32 *minor_status,
\end_layout

\begin_layout Plain Layout

                       gss_cred_id_t *cred_handle,
\end_layout

\begin_layout Plain Layout

                       const gss_OID desired_object,
\end_layout

\begin_layout Plain Layout

                       const gss_buffer_t value);
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
NOTE: the cred_handle input argument to gss_set_cred_option() is a pointer
 to gss_cred_id_t for historical reasons.
 This is in conflict with the regular GSS-API pattern, but it cannot be
 changed at this stage.
 [We could rename this function and not document gss_set_cred_option(),
 but what would be the point?]
\end_layout

\begin_layout Subsection
GSS_Set_cred_option_critical()
\end_layout

\begin_layout Standard
Inputs:
\end_layout

\begin_layout Description
input_cred_handle
\begin_inset space ~
\end_inset

CREDENTIAL
\begin_inset space ~
\end_inset

HANDLE If no credential handle is given then the option MAY be applied globally
 to the default credential handle, but the implementation MAY return an
 error instead.
\end_layout

\begin_layout Description
desired_object
\begin_inset space ~
\end_inset

OBJECT
\begin_inset space ~
\end_inset

IDENTIFIER Desired option; MUST NOT be GSS_C_NO_OID.
\end_layout

\begin_layout Description
value
\begin_inset space ~
\end_inset

OCTET
\begin_inset space ~
\end_inset

STRING Value for the option.
\end_layout

\begin_layout Standard
Outputs:
\end_layout

\begin_layout Itemize
output_cred_handle CREDENTIAL_HANDLE
\end_layout

\begin_layout Itemize
major_status INTEGER
\end_layout

\begin_layout Itemize
minor_status INTEGER
\end_layout

\begin_layout Standard
Return major status codes:
\end_layout

\begin_layout Itemize
GSS_S_COMPLETE indicates success.
\end_layout

\begin_layout Itemize
GSS_S_UNAVAILABLE indicates that the the given option is not supported by
 any mechanism.
\end_layout

\begin_layout Itemize
GSS_S_FAILURE indicates a general failure.
\end_layout

\begin_layout Standard
This function sets the given value to a credential option named by desired_objec
t on the given input_cred_handle or on a duplicate handle output in the
 output_cred_handle parameter if desired.
 If any mechanisms -for which the credential has elements- fails to set
 the option then that element will be removed from the credential.
\end_layout

\begin_layout Subsubsection
C-Bindings
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

   OM_uint32
\end_layout

\begin_layout Plain Layout

   gss_set_cred_option_critical(OM_uint32 *minor_status,
\end_layout

\begin_layout Plain Layout

                                gss_const_cred_id_t input_cred_handle,
\end_layout

\begin_layout Plain Layout

                                gss_cred_id_t *output_cred_handle,
\end_layout

\begin_layout Plain Layout

                                const gss_OID desired_object,
\end_layout

\begin_layout Plain Layout

                                const gss_buffer_t value);
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
channel_bound_flag
\end_layout

\begin_layout Standard
Whenever both the initiator and the acceptor provide matching channel bindings
 to GSS_Init_sec_context() and GSS_Accept_sec_context(), respectively, then
 the mechanism SHALL indicate that the context is channel bound via an output
 flag for the established context.
\end_layout

\begin_layout Standard
Whenever the caller shall have set the GSS_C_CHANNEL_BOUND_CRED_OPT_OID
 (see below) then the mechanism SHOULD allow security context establishment
 to succeed even if one of the initiator or acceptor failed to provide channel
 bindings.
 Whenever the acceptor shall not have set GSS_C_CHANNEL_BOUND_CRED_OPT_OID
 (see below) and the acceptor has provided channel bindings, then the mechanism
 MUST NOT allow context establishment to succeed when the initiator has
 not itself provided channel bindings.
\end_layout

\begin_layout Subsubsection
C-Bindings
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

   #define GSS_C_CHANNEL_BOUND 4096 /* 0x1000
\end_layout

\begin_layout Plain Layout

   gss_const_OID GSS_C_CHANNEL_BOUND_CRED_OPT_OID; /* OID TBD */
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:References"

\end_inset

Normative References
\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "rfc2119"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "rfc2743"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2743.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "rfc2744"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2744.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "rfc5056"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5056.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "rfc5587"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5587.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Informative References
\end_layout

\begin_layout Standard
\begin_inset Flex BibXML
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "rfc4121"
target "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4121.xml"

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
