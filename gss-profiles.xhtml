<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "file:///home/nico/I-Ds/httpbis/../test/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="GENERATOR" content="LyX 2.0.0" />
<meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
<title>Simplified and Minimized Profiles of the Generic Security Services Application Programming Interface</title>

<!-- Text Class Preamble -->
<style type="text/css">
div.toc {
margin: 2em 0em;
border-style: solid;
border-width: 2px 0px;
padding: 1em 0em;
}
div.tochead { font-size: x-large; font-weight: bold; }
div.lyxtoc-0 {
margin: 2em 0em 0em 0em;
font-size: xx-large;
font-weight: bold;
}
div.lyxtoc-1 {
margin: 1em 0em 0em 0em;
font-size: x-large;
font-weight: bold;
}
div.lyxtoc-2 {
margin: 0em 0em 0em 1em;
font-size: large;
font-weight: normal;
}
div.lyxtoc-3 { margin: 0em 0em 0em 0.5em; font-size: medium; }
div.lyxtoc-4 { margin: 0em 0em 0em 0.5em; }
div.lyxtoc-5 { margin: 0em 0em 0em 0.5em; }
div.lyxtoc-6 { margin: 0em 0em 0em 0.5em; }
a.tocentry {
text-decoration: none;
color: black;
}
a.tocentry:visited { color: black; }
a.tocarrow {
font-weight: bold;
text-decoration: none;
color: #909090;
}
a.tocarrow:visited { color: #C0C0C0; }
</style>

<!-- Preamble Snippets -->

<!-- Layout-provided Styles -->
<style type='text/css'>
h1.title {
font-size: x-large;
margin-bottom: 1ex;
text-align: center;

}
div.standard {
text-align: left;

}
div.plain_layout {
text-align: left;

}
div.author {
font-size: large;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: center;

}
div.abstract {
font-size: small;
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
margin-right: 3ex;
text-align: left;

}
div.abstract_label {
font-weight: bold;
font-size: large;
text-align: center;

}

div.abstract {
margin: 4ex;
}
div.abstract_item {
font-size: small;
padding-top: 1ex;
}
div.abstract_label {
font-weight: bold;
}
h2.section {
font-weight: bold;
font-size: x-large;
margin-top: 1.3ex;
margin-bottom: 0.7ex;
text-align: left;

}
h3.subsection {
font-weight: bold;
font-size: large;
margin-top: 0.9ex;
margin-bottom: 0.5ex;
text-align: left;

}
dl.description dt { font-weight: bold; }
ul.itemize {
margin-top: 0.7ex;
margin-bottom: 0.7ex;
margin-left: 3ex;
text-align: left;

}
div.flex_docname {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_ipr {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_intendedstatus {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_titleabbrev {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_ietfarea {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_xml_rfckeyword {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_pi {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_authororg {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_authororgabbrev {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_authoremailaddr {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_entityxref {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
div.flex_bibxml {
font-family: serif;
font-weight: normal;
font-style: normal;
font-variant: normal;
font-size: medium;
}
</style>
</head>
<body>
<h1 class="title"><a id='magicparlabel-1' />
Simplified and Minimized Profiles of the Generic Security Services Application Programming Interface</h1>
<div class="standard"><a id='magicparlabel-2' />
<div class="flex_docname"><div class="plain_layout"><a id='magicparlabel-6' />
draft-williams-gss-profiles-00</div>
</div><div class="flex_ipr"><div class="plain_layout"><a id='magicparlabel-10' />
trust200902</div>
</div><div class="flex_intendedstatus"><div class="plain_layout"><a id='magicparlabel-14' />
info</div>
</div><div class="flex_titleabbrev"><div class="plain_layout"><a id='magicparlabel-18' />
GSS-API Profiles</div>
</div><div class="flex_ietfarea"><div class="plain_layout"><a id='magicparlabel-22' />
Security Area</div>
</div><div class="flex_xml_rfckeyword"><div class="plain_layout"><a id='magicparlabel-26' />
Internet-Draft</div>
</div><div class="flex_pi"><div class="plain_layout"><a id='magicparlabel-30' />
tocindent="no"</div>
</div><div class="flex_pi"><div class="plain_layout"><a id='magicparlabel-34' />
comments="yes"</div>
</div><div class="flex_pi"><div class="plain_layout"><a id='magicparlabel-38' />
inline="yes"</div>
</div></div>

<div class="author"><div class="author_item"><a id='magicparlabel-39' />
Nicolas Williams<div class="flex_authororg"><div class="plain_layout"><a id='magicparlabel-43' />
Cryptonector, LLC</div>
</div><div class="flex_authororgabbrev"><div class="plain_layout"><a id='magicparlabel-47' />
Cryptonector</div>
</div><div class="flex_authoremailaddr"><div class="plain_layout"><a id='magicparlabel-51' />
nico@cryptonector.com</div>
</div></div>
</div>

<div class="abstract"><div class="abstract_label">Abstract</div>
<div class="abstract_item"><a id='magicparlabel-52' />
The Generic Security Service Application Programming Interface (GSS-API) is often mistaken for a bloated framework. The GSS-API is really several things: a basis for formal descriptions of application authentication protocols (what happens when), a pattern for actual programming APIs, a set of constraints and requirements for generic security mechanisms, and concrete programming APIs. Only the first of these is relevant to Internet application protocols.</div>
<div class="abstract_item"><a id='magicparlabel-53' />
This document describes simplified and minimized profiles of the GSS-API for two purposes: explaining its use, whether in standards specifications or actual applications, and specifying sub-sets of the API for a) newcomers to the API, b) application developers that wish to use it but not have to link the whole thing into their applications.</div>
</div>
<div class="standard"><a id='magicparlabel-54' />
</div>
<div class='toc'><div class='tochead part_'>Table of Contents</div>

<div class='lyxtoc-1'><a href='#magicparlabel-55' class='tocentry'>1 Introduction</a> <a href='#magicparlabel-55' class='tocarrow'>&gt;</a>

<div class='lyxtoc-2'><a href='#magicparlabel-62' class='tocentry'>1.1 A Brief Primer on the GSS-API</a> <a href='#magicparlabel-62' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-2'><a href='#magicparlabel-77' class='tocentry'>1.2 Conventions used in this document</a> <a href='#magicparlabel-77' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-1'><a href='#magicparlabel-83' class='tocentry'>2 Simple Profiles of the GSS-API</a> <a href='#magicparlabel-83' class='tocarrow'>&gt;</a>

<div class='lyxtoc-2'><a href='#magicparlabel-91' class='tocentry'>2.1 Trivial Initiator (client) Application</a> <a href='#magicparlabel-91' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-2'><a href='#magicparlabel-104' class='tocentry'>2.2 Simple Initiator Application</a> <a href='#magicparlabel-104' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-2'><a href='#magicparlabel-110' class='tocentry'>2.3 Trivial Acceptor (server) Application</a> <a href='#magicparlabel-110' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-2'><a href='#magicparlabel-125' class='tocentry'>2.4 Simple Acceptor Application</a> <a href='#magicparlabel-125' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-1'><a href='#magicparlabel-130' class='tocentry'>3 Transport Security Layer Profiles</a> <a href='#magicparlabel-130' class='tocarrow'>&gt;</a>

<div class='lyxtoc-2'><a href='#magicparlabel-134' class='tocentry'>3.1 Null Transport Security</a> <a href='#magicparlabel-134' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-2'><a href='#magicparlabel-136' class='tocentry'>3.2 TLS with Server Name Binding</a> <a href='#magicparlabel-136' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-2'><a href='#magicparlabel-147' class='tocentry'>3.3 TLS with Channel Binding</a> <a href='#magicparlabel-147' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-2'><a href='#magicparlabel-158' class='tocentry'>3.4 Per-Message Tokens</a> <a href='#magicparlabel-158' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-2'><a href='#magicparlabel-166' class='tocentry'>3.5 GSS-Keyed Application Transport Security Layer</a> <a href='#magicparlabel-166' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-1'><a href='#magicparlabel-174' class='tocentry'>4 Complex Profiles</a> <a href='#magicparlabel-174' class='tocarrow'>&gt;</a>

<div class='lyxtoc-2'><a href='#magicparlabel-175' class='tocentry'>4.1 Advanced Initiator Application</a> <a href='#magicparlabel-175' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-2'><a href='#magicparlabel-184' class='tocentry'>4.2 Advanced Acceptor Application</a> <a href='#magicparlabel-184' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-1'><a href='#magicparlabel-196' class='tocentry'>5 GSS-API Profile and Subset Identifiers</a> <a href='#magicparlabel-196' class='tocarrow'>&gt;</a>

<div class='lyxtoc-2'><a href='#magicparlabel-231' class='tocentry'>5.1 C-Bindings</a> <a href='#magicparlabel-231' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-1'><a href='#magicparlabel-233' class='tocentry'>6 Mechanism Profiles</a> <a href='#magicparlabel-233' class='tocarrow'>&gt;</a>

<div class='lyxtoc-2'><a href='#magicparlabel-235' class='tocentry'>6.1 Intranet Profile: SPNEGO, Kerberos</a> <a href='#magicparlabel-235' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-2'><a href='#magicparlabel-237' class='tocentry'>6.2 Internet Profile: SPNEGO, &lt;TBD&gt;</a> <a href='#magicparlabel-237' class='tocarrow'>&gt;</a></div>
</div>

<div class='lyxtoc-1'><a href='#magicparlabel-239' class='tocentry'>7 Minimized GSS-API Implementations</a> <a href='#magicparlabel-239' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-248' class='tocentry'>8 IANA Considerations</a> <a href='#magicparlabel-248' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-250' class='tocentry'>9 Security Considerations</a> <a href='#magicparlabel-250' class='tocarrow'>&gt;</a></div>

<div class='lyxtoc-1'><a href='#magicparlabel-253' class='tocentry'>10 Informative References</a> <a href='#magicparlabel-253' class='tocarrow'>&gt;</a></div>
</div>

<h2 class="section"><span class="section_label">1</span> <a id='magicparlabel-55' />
Introduction</h2>
<div class="standard"><a id='magicparlabel-56' />
There has been some confusion in the Internet community as to the nature of the GSS-API. One problem that has been identified by some is that the GSS-API is quite large, that simpler subsets of it may be desirable. This document proposes some subsets and &ldquo;profiles&rdquo; of the GSS-API. We hope this will make the API more approachable, acceptable, and easier to understand.</div>

<div class="standard"><a id='magicparlabel-57' />
The GSS-API is first and foremost an <em>abstract</em> API whose purpose is to describe with high precision how Internet application protocols handle user/service authentication and transport security.</div>

<div class="standard"><a id='magicparlabel-58' />
The GSS-API is also a set of constraints on its security mechanisms.</div>

<div class="standard"><a id='magicparlabel-59' />
The GSS-API is also a pattern for programming language bindings of the abstract GSS-API. In the IETF we have standardized C and Java bindings for the abstract API.</div>

<div class="standard"><a id='magicparlabel-60' />
Note that there is <em>absolutely no requirement</em> that implementators use the C or Java, or any other bindings of the GSS-API to implement applications whose specifications use the <em>abstract</em> GSS-API. For example, one major implementor uses a different API (though in broad strokes quite similar to the GSS-API) to access generic security mechanisms, and applications using that API interoperate perfectly with applications that use bonafide GSS-API implementations.</div>

<div class="standard"><a id='magicparlabel-61' />
By providing minimized profiles/subsets of the GSS-API we hope to make the GSS-API easier to use.</div>
<h3 class="subsection"><span class="subsection_label">1.1</span> <a id='magicparlabel-62' />
A Brief Primer on the GSS-API</h3>
<div class="standard"><a id='magicparlabel-63' />
In GSS terminology we have:</div>

<dl class='description'><dt class="description_label">Principals</dt>
<dd class="description_item"><a id='magicparlabel-64' />
 Entities to be authenticated;</dd>
<dt class="description_label">Credentials</dt>
<dd class="description_item"><a id='magicparlabel-65' />
 Credentials are used to authenticate principals;</dd>
<dt class="description_label">Security&nbsp;context&nbsp;tokens</dt>
<dd class="description_item"><a id='magicparlabel-66' />
 Messages exchanged by two principals to authenticate one to the other (and possibly the other to the one);</dd>
<dt class="description_label">Security&nbsp;contexts</dt>
<dd class="description_item"><a id='magicparlabel-67' />
 The shared state (e.g., session keys) that results from a successful exchange of security context tokens;</dd>
<dt class="description_label">Initiator</dt>
<dd class="description_item"><a id='magicparlabel-68' />
 The party (typically the client) that initiates a security context token exchange;</dd>
<dt class="description_label">Acceptor</dt>
<dd class="description_item"><a id='magicparlabel-69' />
 The party (typically the server) that receives an initial security context token.</dd>
</dl>
<div class="standard"><a id='magicparlabel-70' />
The abstract API has a few data types:</div>

<dl class='description'><dt class="description_label">Buffers</dt>
<dd class="description_item"><a id='magicparlabel-71' />
 Octet strings;</dd>
<dt class="description_label">OIDs</dt>
<dd class="description_item"><a id='magicparlabel-72' />
 Constants identifying GSS mechanisms and name types;</dd>
<dt class="description_label">OID&nbsp;sets</dt>
<dd class="description_item"><a id='magicparlabel-73' />
 Sets of OIDs;</dd>
<dt class="description_label">NAME</dt>
<dd class="description_item"><a id='magicparlabel-74' />
 Opaque object representing the name of a principal;</dd>
<dt class="description_label">CREDENTIAL&nbsp;HANDLE</dt>
<dd class="description_item"><a id='magicparlabel-75' />
 Opaque object representing a credential for authenticating the entity that has access to it;</dd>
<dt class="description_label">SECURITY&nbsp;CONTEXT&nbsp;HANDLE</dt>
<dd class="description_item"><a id='magicparlabel-76' />
 Opaque object representing a security context.</dd>
</dl>
<h3 class="subsection"><span class="subsection_label">1.2</span> <a id='magicparlabel-77' />
Conventions used in this document</h3>
<div class="standard"><a id='magicparlabel-78' />
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-82' />
RFC2119</div>
</div>.</div>
<h2 class="section"><span class="section_label">2</span> <a id='magicparlabel-83' />
Simple Profiles of the GSS-API</h2>
<div class="standard"><a id='magicparlabel-84' />
We define profiles of the GSS-API for a variety of applications. These can be used both, for application security protocol specifications, and for implementation (but the latter is never required).</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-85' />
Trivial client (&ldquo;initiator&rdquo;) applications;</li>
<li class="itemize_item"><a id='magicparlabel-86' />
Simple initiator applications;</li>
<li class="itemize_item"><a id='magicparlabel-87' />
Various security layer options;</li>
<li class="itemize_item"><a id='magicparlabel-88' />
Trivial server (&ldquo;acceptor&rdquo;) applications;</li>
<li class="itemize_item"><a id='magicparlabel-89' />
Simple acceptor applications.</li>
</ul>
<div class="standard"><a id='magicparlabel-90' />
We also define C bindings for these profiles, as well as for specific additional subsets of GSS-API functionality. These will take the form of C pre-processor macros indicating what profiles and functionality subsets are available.</div>
<h3 class="subsection"><span class="subsection_label">2.1</span> <a id='magicparlabel-91' />
<a id="sub_Trivial_Initiator" />
Trivial Initiator (client) Application</h3>
<div class="standard"><a id='magicparlabel-92' />
This profile requires just six GSS-API functions, three of which are destructors, and one of which is a function for formatting error strings:</div>

<dl class='description'><dt class="description_label">GSS_Import_name()</dt>
<dd class="description_item"><a id='magicparlabel-93' />
 Produces a NAME object given a string and a name type;</dd>
<dt class="description_label">GSS_Init_sec_context()</dt>
<dd class="description_item"><a id='magicparlabel-94' />
 Drives the exchange of security context tokens (authentication messages) on the initiator side;</dd>
<dt class="description_label">GSS_Display_status()</dt>
<dd class="description_item"><a id='magicparlabel-95' />
 Produces a human-readable representation of a status code (error code);</dd>
</dl>
<div class="standard"><a id='magicparlabel-96' />
destructor functions:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-97' />
GSS_Release_name()</li>
<li class="itemize_item"><a id='magicparlabel-98' />
GSS_Release_buffer()</li>
<li class="itemize_item"><a id='magicparlabel-99' />
GSS_Delete_sec_context()</li>
</ul>
<div class="standard"><a id='magicparlabel-100' />
The trivial initiator application profile REQUIRES two name-types: GSS_C_NT_HOSTBASED_SERVICE and GSS_C_NO_OID (denoting a mechanism-specific default name syntax).</div>

<div class="standard"><a id='magicparlabel-101' />
A trivial initiator application begins by using GSS_Import_name() to get a NAME object for the target acceptor (server). This will be a host-based service name like &ldquo;HTTP@hostname&rdquo;. The application then loops over GSS_Init_sec_context() to drive the exchange security context tokens (authentication messages) with the target.</div>

<div class="standard"><a id='magicparlabel-102' />
Most input arguments to GSS_Init_sec_context() will be defaulted.</div>

<div class="standard"><a id='magicparlabel-103' />
If a trivial initiator application has multiple initiator credentials to choose from then the choice of credential will be left to the GSS-API framework or security mechanism. GSS-API implementations SHOULD provide some facility for configuring reasonable initiator identity selection.</div>
<h3 class="subsection"><span class="subsection_label">2.2</span> <a id='magicparlabel-104' />
<a id="sub_Simple_Initiator" />
Simple Initiator Application</h3>
<div class="standard"><a id='magicparlabel-105' />
This profile adds two functions to the trivial initiator application profile, one of which is a destructor:</div>

<dl class='description'><dt class="description_label">GSS_Acquire_cred()</dt>
<dd class="description_item"><a id='magicparlabel-106' />
 Produces a CREDENTIAL HANDLE for a given desired NAME.</dd>
</dl>
<div class="standard"><a id='magicparlabel-107' />
destructor function:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-108' />
GSS_Release_cred()</li>
</ul>
<div class="standard"><a id='magicparlabel-109' />
The initiator application may have multiple credentials and want to choose a specific one to authenticate as to a target. Such an application does so by calling GSS_Import_name() for the desired name, then GSS_Acquire_cred() to acquire a CREDENTIAL HANDLE to pass to GSS_Init_sec_context() as the initiator credential.</div>
<h3 class="subsection"><span class="subsection_label">2.3</span> <a id='magicparlabel-110' />
<a id="sub_Trivial_Acceptor" />
Trivial Acceptor (server) Application</h3>
<div class="standard"><a id='magicparlabel-111' />
This profile requires just eight GSS-API functions, three of which are destructors, and one of which is a function for formatting error strings:</div>

<dl class='description'><dt class="description_label">GSS_Accept_sec_context()</dt>
<dd class="description_item"><a id='magicparlabel-112' />
 Driver of security context token exchange;</dd>
<dt class="description_label">GSS_Display_name_ext()</dt>
<dd class="description_item"><a id='magicparlabel-113' />
 Produces human-readable representation of a NAME object in the syntax of selected name type, if possible;</dd>
<dt class="description_label">GSS_Display_name()</dt>
<dd class="description_item"><a id='magicparlabel-114' />
 Produces a human-readable representation of a NAME object in a mechanism-specific syntax;</dd>
<dt class="description_label">GSS_Export_name()</dt>
<dd class="description_item"><a id='magicparlabel-115' />
 Produces a machine-readable representation of a NAME object in a mechanism-specific format;</dd>
<dt class="description_label">GSS_Display_status()</dt>
<dd class="description_item"><a id='magicparlabel-116' />
 Produces a human-readable representation of a status code (error code);</dd>
</dl>
<div class="standard"><a id='magicparlabel-117' />
destructor functions:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-118' />
GSS_Release_name()</li>
<li class="itemize_item"><a id='magicparlabel-119' />
GSS_Release_buffer()</li>
<li class="itemize_item"><a id='magicparlabel-120' />
GSS_Delete_sec_context()</li>
</ul>
<div class="standard"><a id='magicparlabel-121' />
This profile REQUIRES one name-type: GSS_C_NT_USERNAME.</div>

<div class="standard"><a id='magicparlabel-122' />
A trivial acceptor application begins by using GSS_Accept_sec_context() to drive an exchange of security context tokens by which to authenticate an initiator. A successful authentication will yield a NAME representing the identity of the initiator &ndash; the acceptor will perform authorization based on the name of the initiator. The acceptor application MUST use one of GSS_Display_name_ext(), GSS_Display_name(), or GSS_Export_name() to obtain a textual or binary representation of the initiator name suitable for authorization.</div>

<div class="standard"><a id='magicparlabel-123' />
Most input arguments to GSS_Accept_sec_context() will be defaulted.</div>

<div class="standard"><a id='magicparlabel-124' />
If a trivial acceptor application has multiple acceptor credentials to choose from then the choice will be the initiator's.</div>
<h3 class="subsection"><span class="subsection_label">2.4</span> <a id='magicparlabel-125' />
<a id="sub_Simple_Acceptor" />
Simple Acceptor Application</h3>
<div class="standard"><a id='magicparlabel-126' />
This profile adds three functions to the trivial initiator application profile:</div>

<dl class='description'><dt class="description_label">GSS_Inquire_context()</dt>
<dd class="description_item"><a id='magicparlabel-127' />
 A simple acceptor application may be interested in knowing what name it was called by the initiator, and may do so by calling GSS_Inquire_context().</dd>
<dt class="description_label">GSS_Store_cred()</dt>
<dd class="description_item"><a id='magicparlabel-128' />
 A simple acceptor application may have a use for delegated credentials. This function makes it possible to make delegated credentials available to other applications.</dd>
<dt class="description_label">GSS_Release_cred()</dt>
<dd class="description_item"><a id='magicparlabel-129' />
 This is the destructor for the delegated CREDENTIAL HANDLE.</dd>
</dl>
<h2 class="section"><span class="section_label">3</span> <a id='magicparlabel-130' />
<a id="sec_Transport_Security_Layer" />
Transport Security Layer Profiles</h2>
<div class="standard"><a id='magicparlabel-131' />
Internet applications often require transport security &ndash; integrity protection or integrity and confidentiality protection. In simpler terms: some applications require encryption.</div>

<div class="standard"><a id='magicparlabel-132' />
The GSS-API was originally designed to provide facilities that the application could use to protect its in-flight data. Since then a number of options have been added to make it easier to use the GSS-API in existing applications that already have transport security facilities. The GSS-API now supports applications that use TLS for transport security, applications that have their own cryptographic transport protection facilities (like AFS' RX transport), as well as applications that can just use the original GSS-API transport security facilities.</div>

<div class="standard"><a id='magicparlabel-133' />
It is now possible to retrofit the GSS-API for authentication (and, where required, key exchange) into the widest possible range of applications.</div>
<h3 class="subsection"><span class="subsection_label">3.1</span> <a id='magicparlabel-134' />
<a id="sub_Null_Transport_Security" />
Null Transport Security</h3>
<div class="standard"><a id='magicparlabel-135' />
In some environments strong authentication of users and services is sufficient, with no need to protect in-flight data from passive nor active attacks. The trivial and simple profiles of the GSS-API suffice for these applications.</div>
<h3 class="subsection"><span class="subsection_label">3.2</span> <a id='magicparlabel-136' />
<a id="sub_TLS_Name_Binding" />
TLS with Server Name Binding</h3>
<div class="standard"><a id='magicparlabel-137' />
This profile adds not functions to any of the trivial and simple acceptor application profiles.</div>

<div class="standard"><a id='magicparlabel-138' />
Applications using this profile use TLS <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-142' />
RFC5246</div>
</div> for transport security and the GSS-API for authentication. This profile REQUIRES that applications use the 'tls-server-end-point' channel binding type <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-146' />
RFC5929</div>
</div> a TLS server certificate to authenticate the server to the client and that the same server name used to authenticate the server in TLS also be used to authenticate the server in the GSS-API.</div>
<h3 class="subsection"><span class="subsection_label">3.3</span> <a id='magicparlabel-147' />
<a id="sub_TLS_CB" />
TLS with Channel Binding</h3>
<div class="standard"><a id='magicparlabel-148' />
This profile adds no functions to any of the initiator or acceptor application profiles. Instead this profile makes support for channel binding <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-152' />
RFC5056</div>
</div> REQUIRED.</div>

<div class="standard"><a id='magicparlabel-153' />
Applications using this profile use TLS <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-157' />
RFC5246</div>
</div> for transport security, possibly using anonymous Diffie-Hellman (DH) cipher suites. Channel binding ensures that the end-points of the TLS connection are logically the same as the GSS-API end-points, thus ensuring that there are no men in the middle (MITMs) even if anonymous DH TLS cipher suites are used.</div>
<h3 class="subsection"><span class="subsection_label">3.4</span> <a id='magicparlabel-158' />
<a id="sub_Per_msg_tokens" />
Per-Message Tokens</h3>
<div class="standard"><a id='magicparlabel-159' />
This profile adds four functions to the simple initiator application profile:</div>

<dl class='description'><dt class="description_label">GSS_GetMIC()</dt>
<dd class="description_item"><a id='magicparlabel-160' />
 Get an authentication code for a message (something like a MAC);</dd>
<dt class="description_label">GSS_VerifyMIC()</dt>
<dd class="description_item"><a id='magicparlabel-161' />
 Verify an authentication code sent by the peer;</dd>
<dt class="description_label">GSS_Wrap()</dt>
<dd class="description_item"><a id='magicparlabel-162' />
 Wrap an application message, typically to provide confidentiality and integrity protection (i.e., encrypt with authentication);</dd>
<dt class="description_label">GSS_Unwrap()</dt>
<dd class="description_item"><a id='magicparlabel-163' />
 Unwrap a wrapped application message (i.e., decrypt with authentication).</dd>
</dl>
<div class="standard"><a id='magicparlabel-164' />
An application of this type will rely on the GSS-API security mechanism to provide confidentiality and/or integrity protection to the application's messages. This kind of application typically does not use TLS or any other framework for transport security.</div>

<div class="standard"><a id='magicparlabel-165' />
Applications may use these functions to implement either of octet streams and unsequenced datagram security layers.</div>
<h3 class="subsection"><span class="subsection_label">3.5</span> <a id='magicparlabel-166' />
<a id="sub_PRF" />
GSS-Keyed Application Transport Security Layer</h3>
<div class="standard"><a id='magicparlabel-167' />
This profile adds one function to the simple initiator application profile:</div>

<dl class='description'><dt class="description_label">GSS_Pseudo_random()</dt>
<dd class="description_item"><a id='magicparlabel-168' />
 Get a pseudo-random output octet string based on session keys exchanged by the GSS-API security mechanism and an input octet string provided by the application.</dd>
</dl>
<div class="standard"><a id='magicparlabel-169' />
An application of this type typically has its own transport security layer (i.e., does its own encryption) and only requires a session key, which it can get from the GSS-API security context by using the GSS_Pseudo_random() <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-173' />
RFC4401</div>
</div> function to obtain an octet string of suitable length.</div>
<h2 class="section"><span class="section_label">4</span> <a id='magicparlabel-174' />
Complex Profiles</h2>
<h3 class="subsection"><span class="subsection_label">4.1</span> <a id='magicparlabel-175' />
<a id="sub_Complex_Initiator_Application" />
Advanced Initiator Application</h3>
<div class="standard"><a id='magicparlabel-176' />
A complex initiator application requires most of the functions defined in <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-180' />
RFC5587</div>
</div> in addition to those of the simple initiator application profile:</div>

<dl class='description'><dt class="description_label">GSS_Indicate_mechs_by_attrs()</dt>
<dd class="description_item"><a id='magicparlabel-181' />
 Select mechanisms based on desired attributes;</dd>
<dt class="description_label">GSS_Inquire_attrs_for_mech()</dt>
<dd class="description_item"><a id='magicparlabel-182' />
 Get the set of attributes of a given mechanism.</dd>
</dl>
<div class="standard"><a id='magicparlabel-183' />
These functions are useful for mechanism negotiation.</div>
<h3 class="subsection"><span class="subsection_label">4.2</span> <a id='magicparlabel-184' />
<a id="sub_Complex_Acceptor_Application" />
Advanced Acceptor Application</h3>
<div class="standard"><a id='magicparlabel-185' />
A complex acceptor application typically requires fine-grained access to the initiator names so as to implement more advanced authorization schemes. This means all of the naming extensions APIs:</div>

<dl class='description'><dt class="description_label">GSS_Display_name_ext()</dt>
<dd class="description_item"><a id='magicparlabel-186' />
 Already covered in <a href="#sub_Trivial_Acceptor">2.3</a>.</dd>
<dt class="description_label">GSS_Inquire_name()</dt>
<dd class="description_item"><a id='magicparlabel-187' />
 Needed to list attributes available in the initiator name.</dd>
<dt class="description_label">GSS_Get_name_attribute()</dt>
<dd class="description_item"><a id='magicparlabel-188' />
 Needed to access individual attributes of the initiator name.</dd>
<dt class="description_label">GSS_Export_name_composite()</dt>
<dd class="description_item"><a id='magicparlabel-189' />
 Needed to be able to save a binary version of the initiator name with all its attributes.</dd>
</dl>
<div class="standard"><a id='magicparlabel-190' />
Complex acceptor applications may also need at least one extended mechanism inquiry function <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-194' />
RFC5587</div>
</div>:</div>

<dl class='description'><dt class="description_label">GSS_Inquire_attrs_for_mech()</dt>
<dd class="description_item"><a id='magicparlabel-195' />
 Get the set of attributes of a given mechanism.</dd>
</dl>
<h2 class="section"><span class="section_label">5</span> <a id='magicparlabel-196' />
<a id="sec_identifiers" />
GSS-API Profile and Subset Identifiers</h2>
<div class="standard"><a id='magicparlabel-197' />
We define identifiers for GSS-API profiles and subsets. These should be used as follows:</div>

<ul class="itemize"><li class="itemize_item"><a id='magicparlabel-198' />
Internet application specifications using the GSS-API must list the profiles/subsets of the API required to implement the specification;</li>
<li class="itemize_item"><a id='magicparlabel-199' />
GSS-API implementations SHOULD use these identifiers to advertise which profiles/subsets of the API are available</li>
<li class="itemize_item"><a id='magicparlabel-200' />
GSS-API application implementations using the GSS-API in the implementation SHOULD use these identifiers to request profiles/subsets of the API to use.</li>
</ul>
<div class="standard"><a id='magicparlabel-201' />
The identifiers are:</div>

<dl class='description'><dt class="description_label">GSS_PR_V2U1</dt>
<dd class="description_item"><a id='magicparlabel-202' />
 This refers to the base GSS-API version 2 update 1.</dd>
<dt class="description_label">GSS_PR_TRIVIAL_INITIATOR</dt>
<dd class="description_item"><a id='magicparlabel-203' />
 See <a href="#sub_Trivial_Initiator">2.1</a>.</dd>
<dt class="description_label">GSS_PR_SIMPLE_INITIATOR</dt>
<dd class="description_item"><a id='magicparlabel-204' />
 See <a href="#sub_Simple_Initiator">2.2</a>.</dd>
<dt class="description_label">GSS_PR_TRIVIAL_ACCEPTOR</dt>
<dd class="description_item"><a id='magicparlabel-205' />
 See <a href="#sub_Trivial_Acceptor">2.3</a>.</dd>
<dt class="description_label">GSS_PR_SIMPLE_ACCEPTOR</dt>
<dd class="description_item"><a id='magicparlabel-206' />
 See <a href="#sub_Simple_Acceptor">2.4</a>.</dd>
<dt class="description_label">GSS_PR_ADVANCED_INITIATOR</dt>
<dd class="description_item"><a id='magicparlabel-207' />
 See <a href="#sub_Complex_Initiator_Application">4.1</a>.</dd>
<dt class="description_label">GSS_PR_ADVANCED_ACCEPTOR</dt>
<dd class="description_item"><a id='magicparlabel-208' />
 See <a href="#sub_Complex_Acceptor_Application">4.2</a>.</dd>
<dt class="description_label">GSS_PR_CB</dt>
<dd class="description_item"><a id='magicparlabel-209' />
 See <a href="#sub_TLS_CB">3.3</a>.</dd>
<dt class="description_label">GSS_PR_MSG_TOKENS</dt>
<dd class="description_item"><a id='magicparlabel-210' />
 See <a href="#sub_Per_msg_tokens">3.4</a>.</dd>
<dt class="description_label">GSS_PR_PRF</dt>
<dd class="description_item"><a id='magicparlabel-211' />
 See <a href="#sub_PRF">3.5</a><div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-215' />
RFC4401</div>
</div>.</dd>
<dt class="description_label">GSS_PR_STORE_CRED</dt>
<dd class="description_item"><a id='magicparlabel-216' />
 See <a href="#sub_Simple_Acceptor">2.4</a> and <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-220' />
RFC5588</div>
</div></dd>
<dt class="description_label">GSS_PR_EXTENDED_MECH_INQUIRY</dt>
<dd class="description_item"><a id='magicparlabel-221' />
 Functions from <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-225' />
RFC5587</div>
</div></dd>
<dt class="description_label">GSS_PR_EXTENDED_NAMING</dt>
<dd class="description_item"><a id='magicparlabel-226' />
 Functions from <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-230' />
RFC6680</div>
</div></dd>
</dl>
<h3 class="subsection"><span class="subsection_label">5.1</span> <a id='magicparlabel-231' />
C-Bindings</h3>
<div class="standard"><a id='magicparlabel-232' />
C pre-processor macros MUST be defined by &lt;gssapi.h&gt; or &lt;gssapi/gssapi.h&gt; for each of the supported profiles and subsets of the GSS-API supported by the GSS-API implementation. The C pre-processor macro names MUST be as given in the preceding section, and the value should be 1 if the macro is defined.</div>
<h2 class="section"><span class="section_label">6</span> <a id='magicparlabel-233' />
Mechanism Profiles</h2>
<div class="standard"><a id='magicparlabel-234' />
A mechanism profile is a set of GSS-API mechanisms that MUST be provided.</div>
<h3 class="subsection"><span class="subsection_label">6.1</span> <a id='magicparlabel-235' />
Intranet Profile: SPNEGO, Kerberos</h3>
<div class="standard"><a id='magicparlabel-236' />
...</div>
<h3 class="subsection"><span class="subsection_label">6.2</span> <a id='magicparlabel-237' />
Internet Profile: SPNEGO, &lt;TBD&gt;</h3>
<div class="standard"><a id='magicparlabel-238' />
...</div>
<h2 class="section"><span class="section_label">7</span> <a id='magicparlabel-239' />
Minimized GSS-API Implementations</h2>
<div class="standard"><a id='magicparlabel-240' />
Typically a GSS-API implementation includes all of the basic version 2, update 1 API <div class="flex_entityxref"><div class="plain_layout"><a id='magicparlabel-244' />
RFC2743</div>
</div>. For embedded and mobile applications it may be desirable to have minimized GSS-API implementations, both for the framework itself and the mechanisms. A minimized implementation should provide at least the functionality required by the application and, preferably, no more than is required by the application. In practice this may mean that a complete implementation may have to provide tools for reducing the functionality provided.</div>

<div class="standard"><a id='magicparlabel-245' />
One possibility may be to implement a system whereby all the sources for a C implementation are combined into a single file and then C pre-processing can be used to eliminate all functionality that is not desired, then the resulting object file is linked into the application. This is known by some as an &ldquo;amalgamation&rdquo;, and is much like static linking, but can be significantly more selective. This approach is used by SQLite3, for example.</div>

<div class="standard"><a id='magicparlabel-246' />
Another possibility is to structure the framework library and the mechanism plugins such that subsets are in distinct static linking archives or shared objects. This approach may result in a multiplicity of libraries and/or packages that reflect the profiles of the GSS-API.</div>

<div class="standard"><a id='magicparlabel-247' />
For minimization we recommend either the amalgamation approach or a scheme whereby static linking archives are used. For general purpose use we recommend dynamic linking and no minimization.</div>
<h2 class="section"><span class="section_label">8</span> <a id='magicparlabel-248' />
IANA Considerations</h2>
<div class="standard"><a id='magicparlabel-249' />
We ask the IANA to create a registry of GSS-API profiles and subsets, with the identifiers list from of <a href="#sec_identifiers">5</a> as its contents.</div>
<h2 class="section"><span class="section_label">9</span> <a id='magicparlabel-250' />
Security Considerations</h2>
<div class="standard"><a id='magicparlabel-251' />
The security considerations of the GSS-API version 2, update 1, and its various extensions apply. Using too trivial a profile for an application can have security impact. For example, applications using the trivial initiator application profile (GSS_PR_TRIVIAL_INITIATOR) cannot select an initiator identity and depend entirely on the framework and/or selected mechanism for this.</div>

<div class="standard"><a id='magicparlabel-252' />
Internet applications that use GSS mechanisms should specify one of th transport security layers from <a href="#sec_Transport_Security_Layer">3</a> other than the null layer as required to implement. The simplest transport security layer is, of course, none at all (see <a href="#sub_Null_Transport_Security">3.1</a>), but this is not secure in the Internet threat model; all the other options listed in <a href="#sec_Transport_Security_Layer">3</a> offer good security in the Internet threat model. The next simplest may well be to use TLS with server name binding (see <a href="#sub_TLS_Name_Binding">3.2</a>).</div>
<h2 class="section"><span class="section_label">10</span> <a id='magicparlabel-253' />
Informative References</h2>
<div class="standard"><a id='magicparlabel-254' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-258' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">rfc2119</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-259' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-263' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml">rfc5246</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-264' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-268' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5056.xml">rfc5056</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-269' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-273' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5929.xml">rfc5929</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-274' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-278' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2743.xml">rfc2743</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-279' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-283' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5587.xml">rfc5587</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-284' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-288' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.6680.xml">rfc6680</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-289' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-293' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5588.xml">rfc5588</a></div>
</div></div>

<div class="standard"><a id='magicparlabel-294' />
<div class="flex_bibxml"><div class="plain_layout"><a id='magicparlabel-298' />
<a href="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4401.xml">rfc4401</a></div>
</div></div>
</body>
</html>
